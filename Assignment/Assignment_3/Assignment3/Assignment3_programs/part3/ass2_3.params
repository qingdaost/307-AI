parent.0 = ../../gp/koza/koza.params


#### GP Symbolic Regression Benchmark Problems
#
# This parameter file provides options for doing a variety of common symbolic regression
# benchmark problems defined in the paper "Genetic Programming Needs Better Benchmarks",
# GECCO 2012.  Additionally, one more problem, pagie-2, is provided.
#
# There are 54 benchmarks in all.  Benchmarks vary widely in several respects:
#
# 1. The target function (of course)
# 2. The number of variables, ranging from 1 to 5
# 3. How the training set is generated and the number of test samples.
# 4. How the generalization/testing set is generated, if there is one, and the
#    number of test samples.  If no testing set is indicated for a problem, 
#    ECJ will consider the training and testing sets to be the same.
# 5. The function set used
#
# For ECJ's purposes, items 1, 3, and 4 are determined by the problem name that you
# specify here.  Items 2 and 5 are determined by the function set name that you 
# specify.  You have to specify both (sorry), but ECJ knows which problems use which
# function sets and will warn you when your'e using the wrong one.
#
# Here's where you specify the problem and the function set:


eval.problem.type = vladislavleva-1
gp.tc.0.fset = vladislavleva-b2



# Additionally, you have the option of loading the training and/or test samples from
# files.  Each of these files has the following format.  First comes a number indicating
# how many samples there are.  Usually you'd put this on its own line.  After this comes
# each sample, typically on its own line.  A sample consists of a collection of 
# whitespace delimited numbers.  The first N numbers are the input variables.  The last
# number is the expected output variable.  The value of N must match the expected number
# of variables for the problem.
#
# Here's how you'd specify the training and/or testing files.


eval.problem.testing-file = $test.txt
eval.problem.training-file = $training.txt


# Most of this file defines various function sets for the problems in question.  See the
# paper above for more explanation about these sets.  Here's a table describing the
# problems and function sets and expected number of variables (you need this last one
# if you're building your own training and/or testing files).  See further down
# in this file for an explanation of the naming style of the function sets.
# 
# After the GECCO paper was released, we made tweaks to some of the definitions of the
# problems below due to errors in the paper.  The revised version of the paper has
# been posted at gpbenchmarks.org and my website, and the problem definitions reflect
# those changes as of January 1, 2013.

# PROBLEM NAME        FUNCTION SET      NUMBER OF VARIABLES, AND USEFUL NOTES
# koza-1              koza1             1       * no testing set
# koza-2              koza1             1       * no testing set
# koza-3              koza1             1       * no testing set
# nguyen-1            koza1             1       * no testing set
# nguyen-2            koza1             1       * no testing set; identical to koza-2
# nguyen-3            koza1             1       * no testing set
# nguyen-4            koza1             1       * no testing set
# nguyen-5            koza1             1       * no testing set
# nguyen-6            koza1             1       * no testing set
# nguyen-7            koza1             1       * no testing set
# nguyan-8            koza1             1       * no testing set
# nguyen-9            koza2             2       * no testing set
# nguyen-10           koza2             2       * no testing set
# nguyen-11           koza2             2       * no testing set; not in REVISED GECCO paper
# nguyen-12           koza2             2       * no testing set; not in REVISED GECCO paper
# pagie-1             koza2             2       * no testing set
# pagie-2             koza3             3       * no testing set; not in GECCO paper
# korns-1             korns5            5       
# korns-2             korns5            5
# korns-3             korns5            5
# korns-4             korns5            5
# korns-5             korns5            5
# korns-6             korns5            5
# korns-7             korns5            5
# korns-8             korns5            5
# korns-9             korns5            5       * Revised from GECCO paper
# korns-10            korns5            5
# korns-11            korns5            5
# korns-12            korns5            5
# korns-13            korns5            5
# korns-14            korns5            5
# korns-15            korns5            5
# keijzer-1           keijzer1          1
# keijzer-2           keijzer1          1
# keijzer-3           keijzer2          1       * Revised from GECCO paper
# keijzer-4           keijzer1          1
# keijzer-5           keijzer3          3       * Revised from GECCO paper
# keijzer-6           keijzer1          1
# keijzer-7           keijzer1          1
# keijzer-8           keijzer1          1
# keijzer-9           keijzer1          1
# keijzer-10          keijzer2          2
# keijzer-11          keijzer2          2
# keijzer-12          keijzer2          2
# keijzer-13          keijzer2          2
# keijzer-14          keijzer2          2
# keijzer-15          keijzer2          2
# vladislavleva-1     vladislavleva-b2  2       * Revised from GECCO paper
# vladislavleva-2     vladislavleva-c1  1       * Revised from GECCO paper
# vladislavleva-3     vladislavleva-c2  2
# vladislavleva-4     vladislavleva-a5  5
# vladislavleva-5     vladislavleva-a3  3
# vladislavleva-6     vladislavleva-b2  2
# vladislavleva-7     vladislavleva-c2  2
# vladislavleva-8     vladislavleva-a2  2



# GP Function sets have a NAME followed by the number of VARIABLES:
# Names include koza, korns, keijzer, 
#               vladislavleva-a, vladislavleva-b, vladislavleva-c
#
# Function sets:
#
# koza1             * This is standard Koza, without ERCs
# koza2		    * Also no ERCs
# koza3		    * Also no ERCs
# korns5
# keijzer1
# keijzer2
# keijzer3
# vladislavleva-a2
# vladislavleva-a3
# vladislavleva-a5
# vladislavleva-b2
# vladislavleva-c1
# vladislavleva-c2





### Here are all the function set definitions

gp.fs.size = 1



# vladislavleva-b2
# Note: vladislavleva has three ERCs, all of which are not constants
#       but rather are one-parameter functions with an embedded constant
gp.fs.0 = ec.gp.GPFunctionSet
gp.fs.0.name = vladislavleva-b2
gp.fs.0.size = 19
gp.fs.0.func.0 = ec.app.regression.func.Add
gp.fs.0.func.0.nc = nc2
gp.fs.0.func.1 = ec.app.regression.func.Mul
gp.fs.0.func.1.nc = nc2
gp.fs.0.func.2 = ec.app.regression.func.Sub
gp.fs.0.func.2.nc = nc2
gp.fs.0.func.3 = ec.app.regression.func.Div
gp.fs.0.func.3.nc = nc2
gp.fs.0.func.4 = ec.app.regression.func.Abs
gp.fs.0.func.4.nc = nc1
gp.fs.0.func.5 = ec.app.regression.func.Exp
gp.fs.0.func.5.nc = nc1
gp.fs.0.func.6 = ec.app.regression.func.RegERC
gp.fs.0.func.6.nc = nc0
gp.fs.0.func.7 = ec.app.regression.func.Sin
gp.fs.0.func.7.nc = nc1
gp.fs.0.func.8 = ec.app.regression.func.Cos
gp.fs.0.func.8.nc = nc1
gp.fs.0.func.9 = ec.app.regression.func.Log
gp.fs.0.func.9.nc = nc1
gp.fs.0.func.10 = ec.app.regression.func.X1
gp.fs.0.func.10.nc = nc0
gp.fs.0.func.11 = ec.app.regression.func.X2
gp.fs.0.func.11.nc = nc0
gp.fs.0.func.12 = ec.app.regression.func.X3
gp.fs.0.func.12.nc = nc0
gp.fs.0.func.13 = ec.app.regression.func.X4
gp.fs.0.func.13.nc = nc0
gp.fs.0.func.14 = ec.app.regression.func.X5
gp.fs.0.func.14.nc = nc0
gp.fs.0.func.15 = ec.app.regression.func.X6
gp.fs.0.func.15.nc = nc0
gp.fs.0.func.16 = ec.app.regression.func.X7
gp.fs.0.func.16.nc = nc0
gp.fs.0.func.17 = ec.app.regression.func.X8
gp.fs.0.func.17.nc = nc0
gp.fs.0.func.18 = ec.app.regression.func.X9
gp.fs.0.func.18.nc = nc0


### Don't mess with this, it defines our problem and data 
eval.problem = ec.app.regression.Benchmarks
eval.problem.data = ec.app.regression.RegressionData




